function Man() { }
//Создаем функцию конструктор Man вместе с ней создается объект 6; свойство __proto__ объекта 6 ведет к объекту 5 на основе которого был создан объект 6, свойство конструктор объекта 6 ведет к Man, a Man.prototype указывает на объект 6


function Human() { }
///Создаем функцию конструктор Human вместе с ней создается объект 4; свойство __proto__ объекта 4 ведет к объекту 5; свойство конструктор объекта 4 ведет к Human, a Human.prototype указывает на объект 4

Man.prototype = Object.create(Human.prototype);
//функция-конструктор Man становится дочерней к функциии-конструктору Human, вместе с этим создается объект 3, свойство __proto__ которого ведет к объекту 4, Man.prototype теперь ведет к объекту 3

Man.prototype.constructor = Man;
//конструктор объекта 3 ведет к Man

function Alexander() { }
//Создаем функцию конструктор Alex вместе с ней создается объект 7; свойство __proto__ объекта 7 ведет к объекту 5;  a Alex.prototype указывает на объект 7

Alexander.prototype = Object.create(Man.prototype);
//функция-конструктор Alex становится дочерней к функциии-конструктору Мan, вместе с этим создается объект 2, свойство __proto__ которого ведет к объекту 3, Alex.prototype ведет к объекту 2

Alexander.prototype.constructor = Alexander;
//свойство конструктор объекта2 ведет к Alex

const alex = new Alexander();
//создается объект 1, его __proto__ ведет к объекту 2; константа  alex ведет к объекту 1

console.log(alex);
//выводится в консоль переменнная alex которая равна объету типа Alex
